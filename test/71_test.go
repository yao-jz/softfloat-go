package test

import (
	"fmt"
	"testing"

	. "github.com/yao-jz/softfloat-go/comp"
)

func Test71(t *testing.T) {
	// test for 32 bits floating point number -2.285179641001167e-12 and 1.1835257043852976e-30
	// test for 64 bits floating point number -5.972101125460814e-97 and -2.54239314950383e-297

	fmt.Println("test the addf32")
	fmt.Println(F32_add(0xac20ce23, 0xdc009bc))
	fmt.Println(uint64(2887831075))
	fmt.Println("test the subf32")
	fmt.Println(F32_sub(0xac20ce23, 0xdc009bc))
	fmt.Println(uint64(2887831075))
	fmt.Println("test the mulf32")
	fmt.Println(F32_mul(0xac20ce23, 0xdc009bc))
	fmt.Println(uint64(2147485578))
	fmt.Println("test the divf32")
	fmt.Println(F32_div(0xac20ce23, 0xdc009bc))
	fmt.Println(uint64(3721813328))
	fmt.Println("test the eqf32")
	fmt.Println(F32_eq(0xac20ce23, 0xdc009bc))
	fmt.Println("False")
	fmt.Println("test the lef32")
	fmt.Println(F32_le(0xac20ce23, 0xdc009bc))
	fmt.Println("True")
	fmt.Println("test the ltf32")
	fmt.Println(F32_lt(0xac20ce23, 0xdc009bc))
	fmt.Println("True")
	fmt.Println("test the remf32")
	fmt.Println(F32_rem(0xac20ce23, 0xdc009bc))
	fmt.Println(uint64(177963776))
	fmt.Println("test the roundToIntf32")
	fmt.Println(F32_roundToInt(0xac20ce23, false))
	fmt.Println(uint64(0))
	fmt.Println("test the sqrtf32")
	fmt.Println(F32_sqrt(0x2c20ce23))
	fmt.Println(uint64(902489335))
	fmt.Println("test the mulAddf32")
	fmt.Println(F32_mulAdd(0xac20ce23, 0xdc009bc, 0xac20ce23))
	fmt.Println(uint64(2887831075))
	fmt.Println("test the addf64")
	fmt.Println(F64_add(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println(uint64(12390643915834071555))
	fmt.Println("test the subf64")
	fmt.Println(F64_sub(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println(uint64(12390643915834071555))
	fmt.Println("test the mulf64")
	fmt.Println(F64_mul(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println(uint64(0))
	fmt.Println("test the divf64")
	fmt.Println(F64_div(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println(uint64(7604482874545694515))
	fmt.Println("test the eqf64")
	fmt.Println(F64_eq(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println("False")
	fmt.Println("test the lef64")
	fmt.Println(F64_le(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println("True")
	fmt.Println("test the ltf64")
	fmt.Println(F64_lt(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println("True")
	fmt.Println("test the remf64")
	fmt.Println(F64_rem(0xabf468fe35a51a03, 0x825a9a7d87fe99b5))
	fmt.Println(uint64(9391366243488964513))
	fmt.Println("test the roundToIntf64")
	fmt.Println(F64_roundToInt(0xabf468fe35a51a03, false))
	fmt.Println(uint64(0))
	fmt.Println("test the sqrtf64")
	fmt.Println(F64_sqrt(0x2bf468fe35a51a03))
	fmt.Println(uint64(3887189421055920218))
	fmt.Println("test the mulAddf64")
	fmt.Println(F64_mulAdd(0xabf468fe35a51a03, 0x825a9a7d87fe99b5, 0xabf468fe35a51a03))
	fmt.Println(uint64(12390643915834071555))
}
