
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test62(t *testing.T) {
                  // test for 32 bits floating point number 6.458049354378046e-29 and -5359370.0
// test for 64 bits floating point number 4.029807943845135e-09 and -3.7901568982141175e-71

fmt.Println("test the addf32")
fmt.Println(F32_add(0x10a3bb23, 0xcaa38e14))
fmt.Println(uint64(3399716372))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x10a3bb23, 0xcaa38e14))
fmt.Println(uint64(1252232724))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x10a3bb23, 0xcaa38e14))
fmt.Println(uint64(2614179340))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x10a3bb23, 0xcaa38e14))
fmt.Println(uint64(2239767363))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x10a3bb23, 0xcaa38e14))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x10a3bb23, 0xcaa38e14))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x10a3bb23, 0xcaa38e14))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x10a3bb23, 0xcaa38e14))
fmt.Println(uint64(3399716372))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x10a3bb23,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x10a3bb23))
fmt.Println(uint64(672187501))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x10a3bb23, 0xcaa38e14, 0x10a3bb23))
fmt.Println(uint64(2614179337))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println(uint64(4481449768477675547))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println(uint64(4481449768477675547))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println(uint64(12651205288178340401))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println(uint64(14758448324120803969))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x3e314ed218de501b, 0xb150bdd776e66e50))
fmt.Println(uint64(12776070415058096320))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x3e314ed218de501b,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x3e314ed218de501b))
fmt.Println(uint64(4544312478335124425))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x3e314ed218de501b, 0xb150bdd776e66e50, 0x3e314ed218de501b))
fmt.Println(uint64(4481449768477675547))
}
