
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test69(t *testing.T) {
                  // test for 32 bits floating point number -1.6901221897569485e-05 and 1.8289687020273854e-37
// test for 64 bits floating point number -7.281684851862353e-53 and -2130989041.3838978

fmt.Println("test the addf32")
fmt.Println(F32_add(0xb78dc719, 0x278f242))
fmt.Println(uint64(3079522073))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xb78dc719, 0x278f242))
fmt.Println(uint64(3079522073))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xb78dc719, 0x278f242))
fmt.Println(uint64(2147485854))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xb78dc719, 0x278f242))
fmt.Println(uint64(4103195517))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xb78dc719, 0x278f242))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xb78dc719, 0x278f242))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xb78dc719, 0x278f242))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xb78dc719, 0x278f242))
fmt.Println(uint64(24695616))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xb78dc719,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x378dc719))
fmt.Println(uint64(998684285))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xb78dc719, 0x278f242, 0xb78dc719))
fmt.Println(uint64(3079522073))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println(uint64(13970096860708770248))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println(uint64(4746724823853994440))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println(uint64(3966456311193265739))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println(uint64(3687354230504209031))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xb51be5db109729b6, 0xc1dfc113fc5891c8))
fmt.Println(uint64(13050277074275084726))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xb51be5db109729b6,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x351be5db109729b6))
fmt.Println(uint64(4216812479032306994))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xb51be5db109729b6, 0xc1dfc113fc5891c8, 0xb51be5db109729b6))
fmt.Println(uint64(3966456311189609109))
}
