
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test68(t *testing.T) {
                  // test for 32 bits floating point number 1.7955429826885076e-15 and 1.3480877659333608e+33
// test for 64 bits floating point number 3.565557203158646e-180 and -6.749908350788499e+241

fmt.Println("test the addf32")
fmt.Println(F32_add(0x270161ec, 0x7684ee85))
fmt.Println(uint64(1988423301))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x270161ec, 0x7684ee85))
fmt.Println(uint64(4135906949))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x270161ec, 0x7684ee85))
fmt.Println(uint64(1577475604))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x270161ec, 0x7684ee85))
fmt.Println(uint64(0))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x270161ec, 0x7684ee85))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x270161ec, 0x7684ee85))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x270161ec, 0x7684ee85))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x270161ec, 0x7684ee85))
fmt.Println(uint64(654402028))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x270161ec,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x270161ec))
fmt.Println(uint64(859176586))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x270161ec, 0x7684ee85, 0x270161ec))
fmt.Println(uint64(1577475604))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println(uint64(17448139995628512838))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println(uint64(8224767958773737030))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println(uint64(14763565558339585052))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println(uint64(9223372036854775808))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x1aad97362a6924cd, 0xf2243ee1beb92646))
fmt.Println(uint64(17448139995628512838))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x1aad97362a6924cd,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x1aad97362a6924cd))
fmt.Println(uint64(3264764012091096550))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x1aad97362a6924cd, 0xf2243ee1beb92646, 0x1aad97362a6924cd))
fmt.Println(uint64(14763565558339585052))
}
