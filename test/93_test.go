
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test93(t *testing.T) {
                  // test for 32 bits floating point number 9.334907531410863e-07 and 1.116205096244812
// test for 64 bits floating point number 2.0523976939880716e-52 and -8.082975232412113e+34

fmt.Println("test the addf32")
fmt.Println(F32_add(0x357a94ff, 0x3f8edfcf))
fmt.Println(uint64(1066328023))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x357a94ff, 0x3f8edfcf))
fmt.Println(uint64(3213811655))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x357a94ff, 0x3f8edfcf))
fmt.Println(uint64(898357688))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x357a94ff, 0x3f8edfcf))
fmt.Println(uint64(895516318))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x357a94ff, 0x3f8edfcf))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x357a94ff, 0x3f8edfcf))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x357a94ff, 0x3f8edfcf))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x357a94ff, 0x3f8edfcf))
fmt.Println(uint64(897225983))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x357a94ff,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x357a94ff))
fmt.Println(uint64(981288650))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x357a94ff, 0x3f8edfcf, 0x357a94ff))
fmt.Println(uint64(906269212))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println(uint64(14352728392482157498))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println(uint64(5129356355627381690))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println(uint64(13579232870861810232))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println(uint64(12534701236250170118))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x3533a876e9a45299, 0xc72f226dcf8ff3ba))
fmt.Println(uint64(14352728392482157498))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x3533a876e9a45299,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x3533a876e9a45299))
fmt.Println(uint64(4220361200458927359))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x3533a876e9a45299, 0xc72f226dcf8ff3ba, 0x3533a876e9a45299))
fmt.Println(uint64(13579232870861810232))
}
