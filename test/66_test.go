
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test66(t *testing.T) {
                  // test for 32 bits floating point number -3.306314734244122e-18 and -3.8512191858080125e-25
// test for 64 bits floating point number -1.933782205201834e-289 and 2.2294311762182448e-135

fmt.Println("test the addf32")
fmt.Println(F32_add(0xa273f685, 0x96ee6101))
fmt.Println(uint64(2725508743))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xa273f685, 0x96ee6101))
fmt.Println(uint64(2725508739))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xa273f685, 0x96ee6101))
fmt.Println(uint64(909))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xa273f685, 0x96ee6101))
fmt.Println(uint64(1258487704))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xa273f685, 0x96ee6101))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xa273f685, 0x96ee6101))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xa273f685, 0x96ee6101))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xa273f685, 0x96ee6101))
fmt.Println(uint64(2529347945))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xa273f685,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x2273f685))
fmt.Println(uint64(821684406))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xa273f685, 0x96ee6101, 0xa273f685))
fmt.Println(uint64(2725508741))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println(uint64(2592363985183848355))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println(uint64(11815736022038624163))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println(uint64(9223372036854775808))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println(uint64(11525445431329865158))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x83fe270a7bb3167e, 0x23f9ed4f416637a3))
fmt.Println(uint64(2592363985183848355))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x83fe270a7bb3167e,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x3fe270a7bb3167e))
fmt.Println(uint64(2447133460281161913))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x83fe270a7bb3167e, 0x23f9ed4f416637a3, 0x83fe270a7bb3167e))
fmt.Println(uint64(9511082389031556734))
}
