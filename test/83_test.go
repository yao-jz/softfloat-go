
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test83(t *testing.T) {
                  // test for 32 bits floating point number -0.11071740835905075 and 246.822998046875
// test for 64 bits floating point number 1.079931285744939e-50 and 4.5694777830903296e+67

fmt.Println("test the addf32")
fmt.Println(F32_add(0xbde2bfcf, 0x4376d2b0))
fmt.Println(uint64(1131853400))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xbde2bfcf, 0x4376d2b0))
fmt.Println(uint64(3279351560))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xbde2bfcf, 0x4376d2b0))
fmt.Println(uint64(3252330222))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xbde2bfcf, 0x4376d2b0))
fmt.Println(uint64(3119197710))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xbde2bfcf, 0x4376d2b0))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xbde2bfcf, 0x4376d2b0))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xbde2bfcf, 0x4376d2b0))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xbde2bfcf, 0x4376d2b0))
fmt.Println(uint64(1131853400))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xbde2bfcf,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3de2bfcf))
fmt.Println(uint64(1051352369))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xbde2bfcf, 0x4376d2b0, 0xbde2bfcf))
fmt.Println(uint64(3252388270))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println(uint64(5619118347555009362))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println(uint64(14842490384409785170))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println(uint64(4871598100712441420))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println(uint64(2847139428214930828))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x3590297985e9f678, 0x4dfb1e5da0e57352))
fmt.Println(uint64(3859630482570999416))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x3590297985e9f678,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x3590297985e9f678))
fmt.Println(uint64(4233406393257211971))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x3590297985e9f678, 0x4dfb1e5da0e57352, 0x3590297985e9f678))
fmt.Println(uint64(4871598100712441420))
}
