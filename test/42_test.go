
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test42(t *testing.T) {
                  // test for 32 bits floating point number -1.092953117114182e+28 and -5.883279132434052e+19
// test for 64 bits floating point number -1.6692823193008617e+307 and -1.86645221138984e+247

fmt.Println("test the addf32")
fmt.Println(F32_add(0xee0d42c9, 0xe04c1e04))
fmt.Println(uint64(3993846473))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xee0d42c9, 0xe04c1e04))
fmt.Println(uint64(3993846473))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xee0d42c9, 0xe04c1e04))
fmt.Println(uint64(2139095040))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xee0d42c9, 0xe04c1e04))
fmt.Println(uint64(1295067823))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xee0d42c9, 0xe04c1e04))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xee0d42c9, 0xe04c1e04))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xee0d42c9, 0xe04c1e04))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xee0d42c9, 0xe04c1e04))
fmt.Println(uint64(3755185320))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xee0d42c9,false))
fmt.Println(uint64(3993846473))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x6e0d42c9))
fmt.Println(uint64(1455303239))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xee0d42c9, 0xe04c1e04, 0xee0d42c9))
fmt.Println(uint64(2139095040))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println(uint64(18426413521561859005))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println(uint64(18426413521561859005))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println(uint64(9218868437227405312))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println(uint64(5503908212562785208))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xffb7c578752633bd, 0xf3455b0437a49216))
fmt.Println(uint64(17510814832562881664))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xffb7c578752633bd,false))
fmt.Println(uint64(18426413521561859005))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x7fb7c578752633bd))
fmt.Println(uint64(6905004054469950430))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xffb7c578752633bd, 0xf3455b0437a49216, 0xffb7c578752633bd))
fmt.Println(uint64(9218868437227405312))
}
