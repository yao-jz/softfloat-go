
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test36(t *testing.T) {
                  // test for 32 bits floating point number -1.2395297159138402e-28 and nan
// test for 64 bits floating point number -7.641255202761158e+32 and -1.4432490833239734e-83

fmt.Println("test the addf32")
fmt.Println(F32_add(0x911d210a, 0x7fc0c0b5))
fmt.Println(uint64(2143338677))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x911d210a, 0x7fc0c0b5))
fmt.Println(uint64(2143338677))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x911d210a, 0x7fc0c0b5))
fmt.Println(uint64(2143338677))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x911d210a, 0x7fc0c0b5))
fmt.Println(uint64(2143338677))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x911d210a, 0x7fc0c0b5))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x911d210a, 0x7fc0c0b5))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x911d210a, 0x7fc0c0b5))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x911d210a, 0x7fc0c0b5))
fmt.Println(uint64(2143338677))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x911d210a,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x111d210a))
fmt.Println(uint64(675844051))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x911d210a, 0x7fc0c0b5, 0x911d210a))
fmt.Println(uint64(2143338677))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println(uint64(14322245401325270663))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println(uint64(14322245401325270663))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println(uint64(3859726915650309462))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println(uint64(6338112601388730131))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772))
fmt.Println(uint64(12568256234660814720))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xc6c2d64f5bf6f687,false))
fmt.Println(uint64(14322245401325270663))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x46c2d64f5bf6f687))
fmt.Println(uint64(4852783904153409654))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xc6c2d64f5bf6f687, 0xaebc099cf0e30772, 0xc6c2d64f5bf6f687))
fmt.Println(uint64(14322245401325270663))
}
