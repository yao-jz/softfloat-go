
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test82(t *testing.T) {
                  // test for 32 bits floating point number -26.26495361328125 and 5.289288470260806e+34
// test for 64 bits floating point number -6.757830497879068e-134 and -4.477233589496047e+201

fmt.Println("test the addf32")
fmt.Println(F32_add(0xc1d21ea0, 0x7922fd21))
fmt.Println(uint64(2032336161))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xc1d21ea0, 0x7922fd21))
fmt.Println(uint64(4179819809))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xc1d21ea0, 0x7922fd21))
fmt.Println(uint64(4219848485))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xc1d21ea0, 0x7922fd21))
fmt.Println(uint64(2284127078))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xc1d21ea0, 0x7922fd21))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xc1d21ea0, 0x7922fd21))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xc1d21ea0, 0x7922fd21))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xc1d21ea0, 0x7922fd21))
fmt.Println(uint64(2032336161))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xc1d21ea0,false))
fmt.Println(uint64(3251634176))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x41d21ea0))
fmt.Println(uint64(1084489591))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xc1d21ea0, 0x7922fd21, 0xc1d21ea0))
fmt.Println(uint64(4219848485))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println(uint64(16847190951141385447))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println(uint64(7623818914286609639))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println(uint64(5631313762706568342))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println(uint64(0))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7))
fmt.Println(uint64(11837869039502765320))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xa4488f2bf5282d08,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x24488f2bf5282d08))
fmt.Println(uint64(3610770527755893014))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xa4488f2bf5282d08, 0xe9cd3ee8e9f524e7, 0xa4488f2bf5282d08))
fmt.Println(uint64(5631313762706568342))
}
