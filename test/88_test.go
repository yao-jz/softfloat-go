
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test88(t *testing.T) {
                  // test for 32 bits floating point number 3.0415296409798043e-25 and 5.751282849480473e+20
// test for 64 bits floating point number 1.0785382863865232e+28 and -2.7190363056678853e+57

fmt.Println("test the addf32")
fmt.Println(F32_add(0x16bc42f6, 0x61f96c11))
fmt.Println(uint64(1643736081))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x16bc42f6, 0x61f96c11))
fmt.Println(uint64(3791219729))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x16bc42f6, 0x61f96c11))
fmt.Println(uint64(959933594))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x16bc42f6, 0x61f96c11))
fmt.Println(uint64(0))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x16bc42f6, 0x61f96c11))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x16bc42f6, 0x61f96c11))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x16bc42f6, 0x61f96c11))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x16bc42f6, 0x61f96c11))
fmt.Println(uint64(381436662))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x16bc42f6,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x16bc42f6))
fmt.Println(uint64(723205071))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x16bc42f6, 0x61f96c11, 0x16bc42f6))
fmt.Println(uint64(959933594))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println(uint64(14689538036734148263))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println(uint64(5466165999879372455))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println(uint64(15109067645433283376))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println(uint64(13390359441301404778))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x45c16cbad44d6144, 0xcbdbb9041220bea7))
fmt.Println(uint64(14689538036734148263))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x45c16cbad44d6144,false))
fmt.Println(uint64(5026418208803742020))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x45c16cbad44d6144))
fmt.Println(uint64(4816490974698139106))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x45c16cbad44d6144, 0xcbdbb9041220bea7, 0x45c16cbad44d6144))
fmt.Println(uint64(15109067645433283376))
}
