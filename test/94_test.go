
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test94(t *testing.T) {
                  // test for 32 bits floating point number -97.23701477050781 and -7301104027041792.0
// test for 64 bits floating point number 4.173631343340165e+79 and -5.616655497724556e+263

fmt.Println("test the addf32")
fmt.Println(F32_add(0xc2c2795a, 0xd9cf8286))
fmt.Println(uint64(3654255238))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xc2c2795a, 0xd9cf8286))
fmt.Println(uint64(1506771590))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xc2c2795a, 0xd9cf8286))
fmt.Println(uint64(1562223431))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xc2c2795a, 0xd9cf8286))
fmt.Println(uint64(678423299))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xc2c2795a, 0xd9cf8286))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xc2c2795a, 0xd9cf8286))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xc2c2795a, 0xd9cf8286))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xc2c2795a, 0xd9cf8286))
fmt.Println(uint64(3267524954))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xc2c2795a,false))
fmt.Println(uint64(3267493888))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x42c2795a))
fmt.Println(uint64(1092470317))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xc2c2795a, 0xd9cf8286, 0xc2c2795a))
fmt.Println(uint64(1562223431))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println(uint64(17776224795937823604))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println(uint64(8552852759083047796))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println(uint64(18442240474082181120))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println(uint64(11075535803287733890))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x50768711c462dea2, 0xf6b1d644f95d5b74))
fmt.Println(uint64(17776224795937823604))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x50768711c462dea2,false))
fmt.Println(uint64(5797970080665099938))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x50768711c462dea2))
fmt.Println(uint64(5202497858503530706))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x50768711c462dea2, 0xf6b1d644f95d5b74, 0x50768711c462dea2))
fmt.Println(uint64(18442240474082181120))
}
