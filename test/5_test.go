
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test5(t *testing.T) {
                  // test for 32 bits floating point number 0.0032949333544820547 and -3.502395433396689e+31
// test for 64 bits floating point number -3476150541324349.0 and 7.827630911245722e-124

fmt.Println("test the addf32")
fmt.Println(F32_add(0x3b57efcf, 0xf3dd0840))
fmt.Println(uint64(4091349056))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x3b57efcf, 0xf3dd0840))
fmt.Println(uint64(1943865408))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x3b57efcf, 0xf3dd0840))
fmt.Println(uint64(4021973243))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x3b57efcf, 0xf3dd0840))
fmt.Println(uint64(2264537393))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x3b57efcf, 0xf3dd0840))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x3b57efcf, 0xf3dd0840))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x3b57efcf, 0xf3dd0840))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x3b57efcf, 0xf3dd0840))
fmt.Println(uint64(4091349056))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x3b57efcf,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3b57efcf))
fmt.Println(uint64(1030430169))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x3b57efcf, 0xf3dd0840, 0x3b57efcf))
fmt.Println(uint64(4021973243))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println(uint64(14062686738105966714))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println(uint64(14062686738105966714))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println(uint64(12220957128788359812))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println(uint64(15904424530026718319))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xc328b314bc67207a, 0x26608ef3c00e5570))
fmt.Println(uint64(2754955291472457984))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xc328b314bc67207a,false))
fmt.Println(uint64(14062686738105966714))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x4328b314bc67207a))
fmt.Println(uint64(4723182137926082758))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xc328b314bc67207a, 0x26608ef3c00e5570, 0xc328b314bc67207a))
fmt.Println(uint64(14062686738105966714))
}
