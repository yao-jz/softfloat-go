
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test1(t *testing.T) {
                  // test for 32 bits floating point number -8.388518001239059e-18 and -0.0013914257287979126
// test for 64 bits floating point number -3.9778732752620154e-247 and 5.222140787469142e+48

fmt.Println("test the addf32")
fmt.Println(F32_add(0xa31abda8, 0xbab66080))
fmt.Println(uint64(3132514432))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xa31abda8, 0xbab66080))
fmt.Println(uint64(985030784))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xa31abda8, 0xbab66080))
fmt.Println(uint64(509377108))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xa31abda8, 0xbab66080))
fmt.Println(uint64(668546340))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xa31abda8, 0xbab66080))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xa31abda8, 0xbab66080))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xa31abda8, 0xbab66080))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xa31abda8, 0xbab66080))
fmt.Println(uint64(2736438696))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xa31abda8,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x231abda8))
fmt.Println(uint64(826738724))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xa31abda8, 0xbab66080, 0xa31abda8))
fmt.Println(uint64(2736424585))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println(uint64(5335804341032410977))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println(uint64(14559176377887186785))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println(uint64(10872780467408220394))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println(uint64(9415030749453239481))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x8cc64018b5f605c7, 0x4a0c95c722395f61))
fmt.Println(uint64(5335804341032410977))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x8cc64018b5f605c7,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0xcc64018b5f605c7))
fmt.Println(uint64(2763713724753383140))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x8cc64018b5f605c7, 0x4a0c95c722395f61, 0x8cc64018b5f605c7))
fmt.Println(uint64(10872780467408220394))
}
