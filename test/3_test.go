
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test3(t *testing.T) {
                  // test for 32 bits floating point number 2.497214244978688e+17 and -2.003824218603797e-30
// test for 64 bits floating point number -1.3143286784523102e-66 and -4.567970897423535e-275

fmt.Println("test the addf32")
fmt.Println(F32_add(0x5c5dcc14, 0x8e2291cd))
fmt.Println(uint64(1549650964))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x5c5dcc14, 0x8e2291cd))
fmt.Println(uint64(1549650964))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x5c5dcc14, 0x8e2291cd))
fmt.Println(uint64(2869746039))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x5c5dcc14, 0x8e2291cd))
fmt.Println(uint64(4286578688))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x5c5dcc14, 0x8e2291cd))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x5c5dcc14, 0x8e2291cd))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x5c5dcc14, 0x8e2291cd))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x5c5dcc14, 0x8e2291cd))
fmt.Println(uint64(2355165168))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x5c5dcc14,false))
fmt.Println(uint64(1549650964))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x5c5dcc14))
fmt.Println(uint64(1307461924))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x5c5dcc14, 0x8e2291cd, 0x5c5dcc14))
fmt.Println(uint64(1549650964))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println(uint64(12844749462316466627))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println(uint64(12844749462316466627))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println(uint64(0))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println(uint64(7725476189155480851))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xb241b794e24341c3, 0x86f94df9ce9e73a1))
fmt.Println(uint64(9716664415192185164))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xb241b794e24341c3,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x3241b794e24341c3))
fmt.Println(uint64(4113984966121201795))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xb241b794e24341c3, 0x86f94df9ce9e73a1, 0xb241b794e24341c3))
fmt.Println(uint64(12844749462316466627))
}
