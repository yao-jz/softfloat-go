
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test10(t *testing.T) {
                  // test for 32 bits floating point number 4454142542086144.0 and -2962516736.0
// test for 64 bits floating point number 1.9237623822557358e+70 and 1.1832667887890962e+27

fmt.Println("test the addf32")
fmt.Println(F32_add(0x597d304e, 0xcf30946b))
fmt.Println(uint64(1501376579))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x597d304e, 0xcf30946b))
fmt.Println(uint64(1501376601))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x597d304e, 0xcf30946b))
fmt.Println(uint64(3912147967))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x597d304e, 0xcf30946b))
fmt.Println(uint64(3384248412))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x597d304e, 0xcf30946b))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x597d304e, 0xcf30946b))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x597d304e, 0xcf30946b))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x597d304e, 0xcf30946b))
fmt.Println(uint64(3466813448))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x597d304e,false))
fmt.Println(uint64(1501376590))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x597d304e))
fmt.Println(uint64(1283364649))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x597d304e, 0xcf30946b, 0x597d304e))
fmt.Println(uint64(3912147967))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println(uint64(5658294099984122899))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println(uint64(5658294099984122899))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println(uint64(6063340863720656255))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println(uint64(5253260144495285496))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x4e864c81483e0413, 0x458e9633e936caec))
fmt.Println(uint64(5009527970480375776))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x4e864c81483e0413,false))
fmt.Println(uint64(5658294099984122899))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x4e864c81483e0413))
fmt.Println(uint64(5132615305081261171))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x4e864c81483e0413, 0x458e9633e936caec, 0x4e864c81483e0413))
fmt.Println(uint64(6063340863720656255))
}
