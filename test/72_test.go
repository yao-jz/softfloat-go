
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test72(t *testing.T) {
                  // test for 32 bits floating point number -2.5774108507903293e-05 and -3.935800943547482e-29
// test for 64 bits floating point number 1.940251778641798e-90 and -2.541914038617868e-130

fmt.Println("test the addf32")
fmt.Println(F32_add(0xb7d8357a, 0x9047919e))
fmt.Println(uint64(3084399994))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xb7d8357a, 0x9047919e))
fmt.Println(uint64(3084399994))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xb7d8357a, 0x9047919e))
fmt.Println(uint64(145263758))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xb7d8357a, 0x9047919e))
fmt.Println(uint64(1728752691))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xb7d8357a, 0x9047919e))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xb7d8357a, 0x9047919e))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xb7d8357a, 0x9047919e))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xb7d8357a, 0x9047919e))
fmt.Println(uint64(2402969792))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xb7d8357a,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x37d8357a))
fmt.Println(uint64(1000758133))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xb7d8357a, 0x9047919e, 0xb7d8357a))
fmt.Println(uint64(3084399994))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println(uint64(3265002460126843085))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println(uint64(3265002460126843085))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println(uint64(10549199298351227630))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println(uint64(14426839905069698246))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff))
fmt.Println(uint64(11889613921839570128))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x2d4f9e7052a310cd,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x2d4f9e7052a310cd))
fmt.Println(uint64(3936092278816579794))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x2d4f9e7052a310cd, 0xa5068da13ee4c8ff, 0x2d4f9e7052a310cd))
fmt.Println(uint64(3265002460126843085))
}
