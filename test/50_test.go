
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test50(t *testing.T) {
                  // test for 32 bits floating point number 3.939952699821849e-20 and 1.125001101183744e+31
// test for 64 bits floating point number -1.896563027241137e-169 and -2.9488361345889233e-187

fmt.Println("test the addf32")
fmt.Println(F32_add(0x1f3a0f1b, 0x730dfebf))
fmt.Println(uint64(1930297023))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x1f3a0f1b, 0x730dfebf))
fmt.Println(uint64(4077780671))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x1f3a0f1b, 0x730dfebf))
fmt.Println(uint64(1389258479))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x1f3a0f1b, 0x730dfebf))
fmt.Println(uint64(0))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x1f3a0f1b, 0x730dfebf))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x1f3a0f1b, 0x730dfebf))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x1f3a0f1b, 0x730dfebf))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x1f3a0f1b, 0x730dfebf))
fmt.Println(uint64(523898651))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x1f3a0f1b,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x1f3a0f1b))
fmt.Println(uint64(794443482))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x1f3a0f1b, 0x730dfebf, 0x1f3a0f1b))
fmt.Println(uint64(1389258479))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println(uint64(11305978419821626298))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println(uint64(11305978419821626298))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println(uint64(0))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println(uint64(4873415857078411543))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a))
fmt.Println(uint64(11034813403750389968))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x9ce6e7789fb343ba,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x1ce6e7789fb343ba))
fmt.Println(uint64(3344787626107237549))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x9ce6e7789fb343ba, 0x9934876cf9bb6b8a, 0x9ce6e7789fb343ba))
fmt.Println(uint64(11305978419821626298))
}
