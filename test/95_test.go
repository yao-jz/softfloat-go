
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test95(t *testing.T) {
                  // test for 32 bits floating point number -2.2281218539582828e+32 and 4746702749696.0
// test for 64 bits floating point number 7.912708244691017e-239 and 31611728047468.117

fmt.Println("test the addf32")
fmt.Println(F32_add(0xf52fc490, 0x548a25b1))
fmt.Println(uint64(4113548432))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xf52fc490, 0x548a25b1))
fmt.Println(uint64(4113548432))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xf52fc490, 0x548a25b1))
fmt.Println(uint64(4286578688))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xf52fc490, 0x548a25b1))
fmt.Println(uint64(3760380790))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xf52fc490, 0x548a25b1))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xf52fc490, 0x548a25b1))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xf52fc490, 0x548a25b1))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xf52fc490, 0x548a25b1))
fmt.Println(uint64(1417980280))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xf52fc490,false))
fmt.Println(uint64(4113548432))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x752fc490))
fmt.Println(uint64(1515462586))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xf52fc490, 0x548a25b1, 0xf52fc490))
fmt.Println(uint64(4286578688))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println(uint64(4808929805157100574))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println(uint64(14032301842011876382))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println(uint64(1246829395845229129))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println(uint64(842835039010454729))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xe807cf6d745d275, 0x42bcc02dd22d6c1e))
fmt.Println(uint64(1044972513165431413))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xe807cf6d745d275,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0xe807cf6d745d275))
fmt.Println(uint64(2825718844668424089))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xe807cf6d745d275, 0x42bcc02dd22d6c1e, 0xe807cf6d745d275))
fmt.Println(uint64(1246829395845229393))
}
