
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test67(t *testing.T) {
                  // test for 32 bits floating point number -1679.0172119140625 and 3.7836895962841e+37
// test for 64 bits floating point number 5.2646873991432804e-278 and 1.5951734064196347e-145

fmt.Println("test the addf32")
fmt.Println(F32_add(0xc4d1e08d, 0x7de3b8f8))
fmt.Println(uint64(2112076024))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xc4d1e08d, 0x7de3b8f8))
fmt.Println(uint64(4259559672))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xc4d1e08d, 0x7de3b8f8))
fmt.Println(uint64(4286578688))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xc4d1e08d, 0x7de3b8f8))
fmt.Println(uint64(2255220812))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xc4d1e08d, 0x7de3b8f8))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xc4d1e08d, 0x7de3b8f8))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xc4d1e08d, 0x7de3b8f8))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xc4d1e08d, 0x7de3b8f8))
fmt.Println(uint64(2112076024))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xc4d1e08d,false))
fmt.Println(uint64(3302088704))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x44d1e08d))
fmt.Println(uint64(1109649211))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xc4d1e08d, 0x7de3b8f8, 0xc4d1e08d))
fmt.Println(uint64(4286578688))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println(uint64(2440914483333605034))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println(uint64(11664286520188380842))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println(uint64(0))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println(uint64(2625031579866897207))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa))
fmt.Println(uint64(458765942999697331))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x65ddd31cb8b47b3,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x65ddd31cb8b47b3))
fmt.Println(uint64(2532672208974141860))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x65ddd31cb8b47b3, 0x21dfdeca4234a6aa, 0x65ddd31cb8b47b3))
fmt.Println(uint64(458765942999697331))
}
