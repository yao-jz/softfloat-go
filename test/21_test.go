
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test21(t *testing.T) {
                  // test for 32 bits floating point number 5.417267190388486e-10 and -718679703552.0
// test for 64 bits floating point number 3.3079036267303436e-183 and 8.244813963014481e-52

fmt.Println("test the addf32")
fmt.Println(F32_add(0x3014e8a1, 0xd32754a6))
fmt.Println(uint64(3542570150))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x3014e8a1, 0xd32754a6))
fmt.Println(uint64(1395086502))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x3014e8a1, 0xd32754a6))
fmt.Println(uint64(3284314620))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x3014e8a1, 0xd32754a6))
fmt.Println(uint64(2623787248))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x3014e8a1, 0xd32754a6))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x3014e8a1, 0xd32754a6))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x3014e8a1, 0xd32754a6))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x3014e8a1, 0xd32754a6))
fmt.Println(uint64(3542570150))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x3014e8a1,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3014e8a1))
fmt.Println(uint64(935542459))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x3014e8a1, 0xd32754a6, 0x3014e8a1))
fmt.Println(uint64(3284314620))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println(uint64(3842623876137748825))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println(uint64(13065995912992524633))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println(uint64(1112767197450638061))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println(uint64(2641018466421114153))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959))
fmt.Println(uint64(1876906459553214910))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x1a0c1c7b0e4e31be,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x1a0c1c7b0e4e31be))
fmt.Println(uint64(3242026717754139313))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x1a0c1c7b0e4e31be, 0x3553be0e66a00959, 0x1a0c1c7b0e4e31be))
fmt.Println(uint64(1876906459553214910))
}
