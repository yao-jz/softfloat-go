
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test65(t *testing.T) {
                  // test for 32 bits floating point number 1.6305461553269185e-25 and 5.0434854530981354e+36
// test for 64 bits floating point number 2.638179165271689e-77 and -1.837610805242388e-103

fmt.Println("test the addf32")
fmt.Println(F32_add(0x1649da12, 0x7c72d5c2))
fmt.Println(uint64(2087900610))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x1649da12, 0x7c72d5c2))
fmt.Println(uint64(4235384258))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x1649da12, 0x7c72d5c2))
fmt.Println(uint64(1396668592))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x1649da12, 0x7c72d5c2))
fmt.Println(uint64(0))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x1649da12, 0x7c72d5c2))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x1649da12, 0x7c72d5c2))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x1649da12, 0x7c72d5c2))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x1649da12, 0x7c72d5c2))
fmt.Println(uint64(373938706))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x1649da12,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x1649da12))
fmt.Println(uint64(719540671))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x1649da12, 0x7c72d5c2, 0x1649da12))
fmt.Println(uint64(1396668592))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println(uint64(3461139718508913811))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println(uint64(3461139718508913811))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println(uint64(11147567805975697012))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println(uint64(14221717048672597719))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x3008703c6fb82493, 0xaa9a574ae40300cf))
fmt.Println(uint64(12281860836755086868))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x3008703c6fb82493,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x3008703c6fb82493))
fmt.Println(uint64(4034089455635271820))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x3008703c6fb82493, 0xaa9a574ae40300cf, 0x3008703c6fb82493))
fmt.Println(uint64(3461139718508913811))
}
