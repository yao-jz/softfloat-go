
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test40(t *testing.T) {
                  // test for 32 bits floating point number -2.308578302752818e-14 and 1.0780890406448872e+27
// test for 64 bits floating point number 4.3406386823948064e-169 and 2.627704671501078e-43

fmt.Println("test the addf32")
fmt.Println(F32_add(0xa8cff031, 0x6c5ef18f))
fmt.Println(uint64(1818161551))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xa8cff031, 0x6c5ef18f))
fmt.Println(uint64(3965645199))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xa8cff031, 0x6c5ef18f))
fmt.Println(uint64(3585414784))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xa8cff031, 0x6c5ef18f))
fmt.Println(uint64(2147498929))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xa8cff031, 0x6c5ef18f))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xa8cff031, 0x6c5ef18f))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xa8cff031, 0x6c5ef18f))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xa8cff031, 0x6c5ef18f))
fmt.Println(uint64(1818161551))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xa8cff031,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x28cff031))
fmt.Println(uint64(874718455))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xa8cff031, 0x6c5ef18f, 0xa8cff031))
fmt.Println(uint64(3585414784))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println(uint64(3969765419907461722))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println(uint64(13193137456762237530))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println(uint64(1451059500097941410))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println(uint64(2725210051134897733))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a))
fmt.Println(uint64(2088040557820561133))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x1cfa35d30d80c6ed,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x1cfa35d30d80c6ed))
fmt.Println(uint64(3347435074899016553))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x1cfa35d30d80c6ed, 0x3717709ddf36b25a, 0x1cfa35d30d80c6ed))
fmt.Println(uint64(2088040557820561133))
}
