
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test48(t *testing.T) {
                  // test for 32 bits floating point number -1.5772307688885483e-18 and 4.237343277722677e-32
// test for 64 bits floating point number 1.3665130923656884e-133 and -0.000176696280642144

fmt.Println("test the addf32")
fmt.Println(F32_add(0xa1e8c218, 0xb5c03f4))
fmt.Println(uint64(2716385816))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xa1e8c218, 0xb5c03f4))
fmt.Println(uint64(2716385816))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xa1e8c218, 0xb5c03f4))
fmt.Println(uint64(2147483648))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xa1e8c218, 0xb5c03f4))
fmt.Println(uint64(3590810071))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xa1e8c218, 0xb5c03f4))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xa1e8c218, 0xb5c03f4))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xa1e8c218, 0xb5c03f4))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xa1e8c218, 0xb5c03f4))
fmt.Println(uint64(163563008))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xa1e8c218,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x21e8c218))
fmt.Println(uint64(816618316))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xa1e8c218, 0xb5c03f4, 0xa1e8c218))
fmt.Println(uint64(2716385816))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println(uint64(13774023003007170251))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println(uint64(4550650966152394443))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println(uint64(11786475093246674729))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println(uint64(11898835138873714183))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb))
fmt.Println(uint64(13774023003007170251))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x2458d4b39f5302a2,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x2458d4b39f5302a2))
fmt.Println(uint64(3612993725924874536))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x2458d4b39f5302a2, 0xbf2728f17e4d36cb, 0x2458d4b39f5302a2))
fmt.Println(uint64(2619075816275645266))
}
