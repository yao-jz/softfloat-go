
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test98(t *testing.T) {
                  // test for 32 bits floating point number -50863041150976.0 and -2.892950568228296e-14
// test for 64 bits floating point number -7.096708573726713e+115 and 7.06339363205644e+166

fmt.Println("test the addf32")
fmt.Println(F32_add(0xd63909e6, 0xa9024973))
fmt.Println(uint64(3594062310))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xd63909e6, 0xa9024973))
fmt.Println(uint64(3594062310))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xd63909e6, 0xa9024973))
fmt.Println(uint64(1069307963))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xd63909e6, 0xa9024973))
fmt.Println(uint64(1823853164))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xd63909e6, 0xa9024973))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xd63909e6, 0xa9024973))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xd63909e6, 0xa9024973))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xd63909e6, 0xa9024973))
fmt.Println(uint64(2830921406))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xd63909e6,false))
fmt.Println(uint64(3594062310))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x563909e6))
fmt.Println(uint64(1255777650))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xd63909e6, 0xa9024973, 0xd63909e6))
fmt.Println(uint64(3594062310))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println(uint64(7103067567249971887))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println(uint64(16326439604104747695))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println(uint64(18059788981257871289))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println(uint64(13067210695613542034))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xd7fcd151c1a69572, 0x62932a5199885aaf))
fmt.Println(uint64(7103067567249971887))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xd7fcd151c1a69572,false))
fmt.Println(uint64(15563544561357067634))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x57fcd151c1a69572))
fmt.Println(uint64(5473414012160770667))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xd7fcd151c1a69572, 0x62932a5199885aaf, 0xd7fcd151c1a69572))
fmt.Println(uint64(18059788981257871289))
}
