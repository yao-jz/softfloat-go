
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test92(t *testing.T) {
                  // test for 32 bits floating point number 2.6890992904649025e-11 and nan
// test for 64 bits floating point number 3.37009700531757e+56 and 3.2762665425031485e-108

fmt.Println("test the addf32")
fmt.Println(F32_add(0x2dec8922, 0xffc19a18))
fmt.Println(uint64(4290877976))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x2dec8922, 0xffc19a18))
fmt.Println(uint64(4290877976))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x2dec8922, 0xffc19a18))
fmt.Println(uint64(4290877976))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x2dec8922, 0xffc19a18))
fmt.Println(uint64(4290877976))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x2dec8922, 0xffc19a18))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x2dec8922, 0xffc19a18))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x2dec8922, 0xffc19a18))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x2dec8922, 0xffc19a18))
fmt.Println(uint64(4290877976))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x2dec8922,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x2dec8922))
fmt.Println(uint64(917373035))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x2dec8922, 0xffc19a18, 0x2dec8922))
fmt.Println(uint64(4290877976))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println(uint64(5452589312755527149))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println(uint64(5452589312755527149))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println(uint64(3844508728304821862))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println(uint64(7060681632276156577))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4))
fmt.Println(uint64(2997516653001110348))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x4bab7d1744e26ded,false))
fmt.Println(uint64(5452589312755527149))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x4bab7d1744e26ded))
fmt.Println(uint64(5029861756331772354))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x4bab7d1744e26ded, 0x299ec71e4a6f5be4, 0x4bab7d1744e26ded))
fmt.Println(uint64(5452589312755527149))
}
