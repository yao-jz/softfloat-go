
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test58(t *testing.T) {
                  // test for 32 bits floating point number -6.897970287115595e-34 and 1.4874238380530467e+19
// test for 64 bits floating point number 3.113844341334094e-78 and -1.9225068987968161e+25

fmt.Println("test the addf32")
fmt.Println(F32_add(0x88653971, 0x5f4e6be9))
fmt.Println(uint64(1598974953))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x88653971, 0x5f4e6be9))
fmt.Println(uint64(3746458601))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x88653971, 0x5f4e6be9))
fmt.Println(uint64(2822296793))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x88653971, 0x5f4e6be9))
fmt.Println(uint64(2147483648))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x88653971, 0x5f4e6be9))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x88653971, 0x5f4e6be9))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x88653971, 0x5f4e6be9))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x88653971, 0x5f4e6be9))
fmt.Println(uint64(1598974953))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x88653971,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x8653971))
fmt.Println(uint64(603078166))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x88653971, 0x5f4e6be9, 0x88653971))
fmt.Println(uint64(2822296793))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println(uint64(14208801995472691238))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println(uint64(4985429958617915430))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println(uint64(13048880228080781858))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println(uint64(12292354808919534440))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x2fd7136422608c72, 0xc52fce222802e026))
fmt.Println(uint64(14208801995472691238))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x2fd7136422608c72,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x2fd7136422608c72))
fmt.Println(uint64(4027122977584545252))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x2fd7136422608c72, 0xc52fce222802e026, 0x2fd7136422608c72))
fmt.Println(uint64(13048880228080781858))
}
