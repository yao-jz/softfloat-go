
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test29(t *testing.T) {
                  // test for 32 bits floating point number -6.178620633075297e+33 and 6.6798458308835e-33
// test for 64 bits floating point number -6.026775789544092e-46 and 4.148301703011241e-255

fmt.Println("test the addf32")
fmt.Println(F32_add(0xf7985094, 0xa0abc27))
fmt.Println(uint64(4153954452))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xf7985094, 0xa0abc27))
fmt.Println(uint64(4153954452))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xf7985094, 0xa0abc27))
fmt.Println(uint64(3257210564))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xf7985094, 0xa0abc27))
fmt.Println(uint64(4286578688))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xf7985094, 0xa0abc27))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xf7985094, 0xa0abc27))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xf7985094, 0xa0abc27))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xf7985094, 0xa0abc27))
fmt.Println(uint64(159549574))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xf7985094,false))
fmt.Println(uint64(4153954452))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x77985094))
fmt.Println(uint64(1535877390))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xf7985094, 0xa0abc27, 0xf7985094))
fmt.Println(uint64(4153954452))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println(uint64(13153755036534827756))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println(uint64(13153755036534827756))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println(uint64(9348005965371527589))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println(uint64(16959509811549392798))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xb68b86839f29eaec, 0xb1f24b8cd2bb515))
fmt.Println(uint64(792870756727807306))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xb68b86839f29eaec,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x368b86839f29eaec))
fmt.Println(uint64(4268759006885937092))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xb68b86839f29eaec, 0xb1f24b8cd2bb515, 0xb68b86839f29eaec))
fmt.Println(uint64(13153755036534827756))
}
