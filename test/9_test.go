
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test9(t *testing.T) {
                  // test for 32 bits floating point number 3.180519797751913e-06 and 1.974495170229537e+22
// test for 64 bits floating point number -2.957188799110545e-264 and 4.303067777716656e-292

fmt.Println("test the addf32")
fmt.Println(F32_add(0x365570ea, 0x6485cc08))
fmt.Println(uint64(1686490120))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x365570ea, 0x6485cc08))
fmt.Println(uint64(3833973768))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x365570ea, 0x6485cc08))
fmt.Println(uint64(1532959628))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x365570ea, 0x6485cc08))
fmt.Println(uint64(290206079))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x365570ea, 0x6485cc08))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x365570ea, 0x6485cc08))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x365570ea, 0x6485cc08))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x365570ea, 0x6485cc08))
fmt.Println(uint64(911569130))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x365570ea,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x365570ea))
fmt.Println(uint64(988397828))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x365570ea, 0x6485cc08, 0x365570ea))
fmt.Println(uint64(1532959628))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println(uint64(9887607466706603225))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println(uint64(9887607466706603225))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println(uint64(9223372036854775808))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println(uint64(14246632324282830801))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x8937d69aab8c0cd9, 0x3712d2d49121189))
fmt.Println(uint64(245497706425519324))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x8937d69aab8c0cd9,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x937d69aab8c0cd9))
fmt.Println(uint64(2635599330029633279))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x8937d69aab8c0cd9, 0x3712d2d49121189, 0x8937d69aab8c0cd9))
fmt.Println(uint64(9887607466706603225))
}
