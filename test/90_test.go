
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test90(t *testing.T) {
                  // test for 32 bits floating point number -9.312273186957558e+17 and 5.1286261360822705e+34
// test for 64 bits floating point number -8.825675927980949e-302 and 6.0756185204580085e-242

fmt.Println("test the addf32")
fmt.Println(F32_add(0xdd4ec625, 0x791e09ba))
fmt.Println(uint64(2032011706))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xdd4ec625, 0x791e09ba))
fmt.Println(uint64(4179495354))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xdd4ec625, 0x791e09ba))
fmt.Println(uint64(4286578688))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xdd4ec625, 0x791e09ba))
fmt.Println(uint64(2745661708))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xdd4ec625, 0x791e09ba))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xdd4ec625, 0x791e09ba))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xdd4ec625, 0x791e09ba))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xdd4ec625, 0x791e09ba))
fmt.Println(uint64(2032011706))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xdd4ec625,false))
fmt.Println(uint64(3712927269))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x5d4ec625))
fmt.Println(uint64(1315312384))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xdd4ec625, 0x791e09ba, 0xdd4ec625))
fmt.Println(uint64(4286578688))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println(uint64(998089967347546882))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println(uint64(10221462004202322690))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println(uint64(9223372036854775808))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println(uint64(12935090905782573501))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x816e430020d70c3c, 0xdd9ed8985a1bb02))
fmt.Println(uint64(998089967347546882))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x816e430020d70c3c,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x16e430020d70c3c))
fmt.Println(uint64(2355134548331606088))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x816e430020d70c3c, 0xdd9ed8985a1bb02, 0x816e430020d70c3c))
fmt.Println(uint64(9326465546160901180))
}
