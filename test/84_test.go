
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test84(t *testing.T) {
                  // test for 32 bits floating point number 4.74920417259779e-21 and -6.917463302612305
// test for 64 bits floating point number 5.524018125650942e-140 and 3.810274740378424e+125

fmt.Println("test the addf32")
fmt.Println(F32_add(0x1db36b7c, 0xc0dd5bdc))
fmt.Println(uint64(3235732444))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x1db36b7c, 0xc0dd5bdc))
fmt.Println(uint64(1088248796))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x1db36b7c, 0xc0dd5bdc))
fmt.Println(uint64(2669356075))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x1db36b7c, 0xc0dd5bdc))
fmt.Println(uint64(2622455668))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x1db36b7c, 0xc0dd5bdc))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x1db36b7c, 0xc0dd5bdc))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x1db36b7c, 0xc0dd5bdc))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x1db36b7c, 0xc0dd5bdc))
fmt.Println(uint64(3235732444))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x1db36b7c,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x1db36b7c))
fmt.Println(uint64(781683558))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x1db36b7c, 0xc0dd5bdc, 0x1db36b7c))
fmt.Println(uint64(2667886268))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println(uint64(6485749862793621498))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println(uint64(15709121899648397306))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println(uint64(4402183622242940845))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println(uint64(644774406333042148))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x23050cefa563c4eb, 0x5a02032321da2ffa))
fmt.Println(uint64(2523437389622527211))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x23050cefa563c4eb,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x23050cefa563c4eb))
fmt.Println(uint64(3565149144576718752))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x23050cefa563c4eb, 0x5a02032321da2ffa, 0x23050cefa563c4eb))
fmt.Println(uint64(4402183622242940845))
}
