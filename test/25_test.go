
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test25(t *testing.T) {
                  // test for 32 bits floating point number 1.2690660696534906e-05 and 28986.287109375
// test for 64 bits floating point number 1.4208644706509258e+25 and 2.6922240016463197e+27

fmt.Println("test the addf32")
fmt.Println(F32_add(0x3754e9f9, 0x46e27493))
fmt.Println(uint64(1189246099))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x3754e9f9, 0x46e27493))
fmt.Println(uint64(3336729747))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x3754e9f9, 0x46e27493))
fmt.Println(uint64(1052530562))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x3754e9f9, 0x46e27493))
fmt.Println(uint64(804303136))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x3754e9f9, 0x46e27493))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x3754e9f9, 0x46e27493))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x3754e9f9, 0x46e27493))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x3754e9f9, 0x46e27493))
fmt.Println(uint64(928311801))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x3754e9f9,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3754e9f9))
fmt.Println(uint64(996767508))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x3754e9f9, 0x46e27493, 0x3754e9f9))
fmt.Println(uint64(1052530988))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println(uint64(5017429357568488414))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println(uint64(14240749703674944446))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println(uint64(5393499716598139554))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println(uint64(4572734750624803979))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x45278198588c1044, 0x45a165e93723e7ce))
fmt.Println(uint64(4983094004029329476))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x45278198588c1044,false))
fmt.Println(uint64(4983094004029329476))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x45278198588c1044))
fmt.Println(uint64(4795046207993847184))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x45278198588c1044, 0x45a165e93723e7ce, 0x45278198588c1044))
fmt.Println(uint64(5393499716598139554))
}
