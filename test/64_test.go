
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test64(t *testing.T) {
                  // test for 32 bits floating point number -0.00185181584674865 and 4.340565789282859e-14
// test for 64 bits floating point number -4.560591597695323e+255 and 1.0216170721355587e-130

fmt.Println("test the addf32")
fmt.Println(F32_add(0xbaf2b8a1, 0x29437b51))
fmt.Println(uint64(3136469153))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xbaf2b8a1, 0x29437b51))
fmt.Println(uint64(3136469153))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xbaf2b8a1, 0x29437b51))
fmt.Println(uint64(2763609998))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xbaf2b8a1, 0x29437b51))
fmt.Println(uint64(3508465309))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xbaf2b8a1, 0x29437b51))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xbaf2b8a1, 0x29437b51))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xbaf2b8a1, 0x29437b51))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xbaf2b8a1, 0x29437b51))
fmt.Println(uint64(678187792))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xbaf2b8a1,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3af2b8a1))
fmt.Println(uint64(1026573078))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xbaf2b8a1, 0x29437b51, 0xbaf2b8a1))
fmt.Println(uint64(3136469153))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println(uint64(17655078543415808113))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println(uint64(17655078543415808113))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println(uint64(15710251461207515483))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println(uint64(18442240474082181120))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xf503706505eb9071, 0x24f220f15bed26ce))
fmt.Println(uint64(2657105222920255736))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xf503706505eb9071,false))
fmt.Println(uint64(17655078543415808113))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x7503706505eb9071))
fmt.Println(uint64(6519225305135517645))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xf503706505eb9071, 0x24f220f15bed26ce, 0xf503706505eb9071))
fmt.Println(uint64(17655078543415808113))
}
