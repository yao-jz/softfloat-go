
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test11(t *testing.T) {
                  // test for 32 bits floating point number -1.0477116167506105e-18 and -0.0013620893005281687
// test for 64 bits floating point number -3.3475052960286433e-29 and -6.092263360604725e+69

fmt.Println("test the addf32")
fmt.Println(F32_add(0xa19a9d6d, 0xbab28822))
fmt.Println(uint64(3132262434))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xa19a9d6d, 0xbab28822))
fmt.Println(uint64(984778786))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xa19a9d6d, 0xbab28822))
fmt.Println(uint64(483895132))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xa19a9d6d, 0xbab28822))
fmt.Println(uint64(643675274))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xa19a9d6d, 0xbab28822))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xa19a9d6d, 0xbab28822))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xa19a9d6d, 0xbab28822))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xa19a9d6d, 0xbab28822))
fmt.Println(uint64(2711264621))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xa19a9d6d,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x219a9d6d))
fmt.Println(uint64(814525938))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xa19a9d6d, 0xbab28822, 0xa19a9d6d))
fmt.Println(uint64(2711250819))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println(uint64(14874333144615442840))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println(uint64(5650961107760667032))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println(uint64(5224943663543439507))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println(uint64(3136767413349912146))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xba0537a34c710a50, 0xce6c3f2ffb9f5998))
fmt.Println(uint64(13404181040439822928))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xba0537a34c710a50,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x3a0537a34c710a50))
fmt.Println(uint64(4393840362940324113))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xba0537a34c710a50, 0xce6c3f2ffb9f5998, 0xba0537a34c710a50))
fmt.Println(uint64(5224943663543439507))
}
