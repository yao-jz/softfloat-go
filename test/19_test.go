
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test19(t *testing.T) {
                  // test for 32 bits floating point number 1.1519515517450212e+25 and -2.9250402100444717e-10
// test for 64 bits floating point number 1.414619522434854e+75 and -2.7342415265870822e-135

fmt.Println("test the addf32")
fmt.Println(F32_add(0x691875a3, 0xafa0ce48))
fmt.Println(uint64(1763210659))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x691875a3, 0xafa0ce48))
fmt.Println(uint64(1763210659))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x691875a3, 0xafa0ce48))
fmt.Println(uint64(3644819647))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x691875a3, 0xafa0ce48))
fmt.Println(uint64(4176656000))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x691875a3, 0xafa0ce48))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x691875a3, 0xafa0ce48))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x691875a3, 0xafa0ce48))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x691875a3, 0xafa0ce48))
fmt.Println(uint64(2930454528))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x691875a3,false))
fmt.Println(uint64(1763210659))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x691875a3))
fmt.Println(uint64(1413844776))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x691875a3, 0xafa0ce48, 0x691875a3))
fmt.Println(uint64(1763210659))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println(uint64(5731117685508278599))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println(uint64(5731117685508278599))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println(uint64(12941336153978676927))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println(uint64(16967643574164822608))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x4f89052b92ae0947, 0xa3ffcc32439d6464))
fmt.Println(uint64(11814970776564459892))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x4f89052b92ae0947,false))
fmt.Println(uint64(5731117685508278599))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x4f89052b92ae0947))
fmt.Println(uint64(5169089702661463045))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x4f89052b92ae0947, 0xa3ffcc32439d6464, 0x4f89052b92ae0947))
fmt.Println(uint64(5731117685508278599))
}
