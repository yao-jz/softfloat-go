
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test61(t *testing.T) {
                  // test for 32 bits floating point number -0.07572922855615616 and -3.1758023839906584e-18
// test for 64 bits floating point number -3.891703834347392e-297 and 1.037546430132498e+72

fmt.Println("test the addf32")
fmt.Println(F32_add(0xbd9b17ed, 0xa26a5536))
fmt.Println(uint64(3181058029))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xbd9b17ed, 0xa26a5536))
fmt.Println(uint64(3181058029))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xbd9b17ed, 0xa26a5536))
fmt.Println(uint64(546174846))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xbd9b17ed, 0xa26a5536))
fmt.Println(uint64(1521053459))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xbd9b17ed, 0xa26a5536))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xbd9b17ed, 0xa26a5536))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xbd9b17ed, 0xa26a5536))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xbd9b17ed, 0xa26a5536))
fmt.Println(uint64(2713291460))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xbd9b17ed,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3d9b17ed))
fmt.Println(uint64(1049421217))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xbd9b17ed, 0xa26a5536, 0xbd9b17ed))
fmt.Println(uint64(3181058029))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println(uint64(5684328431955054447))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println(uint64(14907700468809830255))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println(uint64(10473096600220294751))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println(uint64(9223372036854775808))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x82645c7e21300bb5, 0x4ee2ca978d558f6f))
fmt.Println(uint64(5684328431955054447))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x82645c7e21300bb5,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x2645c7e21300bb5))
fmt.Println(uint64(2389589049939447332))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x82645c7e21300bb5, 0x4ee2ca978d558f6f, 0x82645c7e21300bb5))
fmt.Println(uint64(10473096600220294751))
}
