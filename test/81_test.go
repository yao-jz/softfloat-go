
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test81(t *testing.T) {
                  // test for 32 bits floating point number -2.0179877648965437e+24 and 6.622186798921348e-09
// test for 64 bits floating point number -9.74092215730994e+168 and 1.9533228342830416e-88

fmt.Println("test the addf32")
fmt.Println(F32_add(0xe7d5a9ab, 0x31e3895f))
fmt.Println(uint64(3889539499))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xe7d5a9ab, 0x31e3895f))
fmt.Println(uint64(3889539499))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xe7d5a9ab, 0x31e3895f))
fmt.Println(uint64(3661490202))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xe7d5a9ab, 0x31e3895f))
fmt.Println(uint64(4117783552))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xe7d5a9ab, 0x31e3895f))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xe7d5a9ab, 0x31e3895f))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xe7d5a9ab, 0x31e3895f))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xe7d5a9ab, 0x31e3895f))
fmt.Println(uint64(834147456))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xe7d5a9ab,false))
fmt.Println(uint64(3889539499))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x67d5a9ab))
fmt.Println(uint64(1403346933))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xe7d5a9ab, 0x31e3895f, 0xe7d5a9ab))
fmt.Println(uint64(3889539499))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println(uint64(16358382336301096201))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println(uint64(16358382336301096201))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println(uint64(15046539598934814078))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println(uint64(17670596497135951669))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xe304a6107f405d09, 0x2db8de61d919850e))
fmt.Println(uint64(3293027054687329162))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xe304a6107f405d09,false))
fmt.Println(uint64(16358382336301096201))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x6304a6107f405d09))
fmt.Println(uint64(5870922089504017776))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xe304a6107f405d09, 0x2db8de61d919850e, 0xe304a6107f405d09))
fmt.Println(uint64(16358382336301096201))
}
