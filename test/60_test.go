
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test60(t *testing.T) {
                  // test for 32 bits floating point number -1747192159141888.0 and -26886205440.0
// test for 64 bits floating point number 2.440762244934208 and 1.5684488881958383e+188

fmt.Println("test the addf32")
fmt.Println(F32_add(0xd8c6a1fc, 0xd0c8515e))
fmt.Println(uint64(3636896452))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xd8c6a1fc, 0xd0c8515e))
fmt.Println(uint64(3636896052))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xd8c6a1fc, 0xd0c8515e))
fmt.Println(uint64(1780182447))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xd8c6a1fc, 0xd0c8515e))
fmt.Println(uint64(1199429813))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xd8c6a1fc, 0xd0c8515e))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xd8c6a1fc, 0xd0c8515e))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xd8c6a1fc, 0xd0c8515e))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xd8c6a1fc, 0xd0c8515e))
fmt.Println(uint64(3498930864))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xd8c6a1fc,false))
fmt.Println(uint64(3636896252))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x58c6a1fc))
fmt.Println(uint64(1277129665))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xd8c6a1fc, 0xd0c8515e, 0xd8c6a1fc))
fmt.Println(uint64(1780182447))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println(uint64(7422501796459125360))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println(uint64(16645873833313901168))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println(uint64(7428123435840457822))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println(uint64(1797311666936393763))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x400386ae5b1a6e85, 0x6702060ecaa51a70))
fmt.Println(uint64(4612678526768410245))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x400386ae5b1a6e85,false))
fmt.Println(uint64(4611686018427387904))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x400386ae5b1a6e85))
fmt.Println(uint64(4609714765420088260))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x400386ae5b1a6e85, 0x6702060ecaa51a70, 0x400386ae5b1a6e85))
fmt.Println(uint64(7428123435840457822))
}
