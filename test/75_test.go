
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test75(t *testing.T) {
                  // test for 32 bits floating point number 0.0071543240919709206 and 8.574484692175151e+30
// test for 64 bits floating point number -1.1342097333859979e+142 and 7.69544320329028e+161

fmt.Println("test the addf32")
fmt.Println(F32_add(0x3bea6ed2, 0x72d8734f))
fmt.Println(uint64(1926787919))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x3bea6ed2, 0x72d8734f))
fmt.Println(uint64(4074271567))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x3bea6ed2, 0x72d8734f))
fmt.Println(uint64(1866872601))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x3bea6ed2, 0x72d8734f))
fmt.Println(uint64(143303252))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x3bea6ed2, 0x72d8734f))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x3bea6ed2, 0x72d8734f))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x3bea6ed2, 0x72d8734f))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x3bea6ed2, 0x72d8734f))
fmt.Println(uint64(1005219538))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x3bea6ed2,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3bea6ed2))
fmt.Println(uint64(1034762746))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x3bea6ed2, 0x72d8734f, 0x3bea6ed2))
fmt.Println(uint64(1866872601))
fmt.Println("test the addf64")
fmt.Println(F64_add(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println(uint64(7028815277444227844))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println(uint64(16252187314299003652))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println(uint64(18377347961907130638))
fmt.Println("test the divf64")
fmt.Println(F64_div(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println(uint64(13533711060030425606))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0xdd6dc37b00023ecf, 0x618b5e412be6e304))
fmt.Println(uint64(7028815277444227844))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0xdd6dc37b00023ecf,false))
fmt.Println(uint64(15955623987892076239))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x5d6dc37b00023ecf))
fmt.Println(uint64(5669711484715506590))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0xdd6dc37b00023ecf, 0x618b5e412be6e304, 0xdd6dc37b00023ecf))
fmt.Println(uint64(18377347961907130638))
}
