
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test34(t *testing.T) {
                  // test for 32 bits floating point number -9.578866901603124e-16 and 0.030033132061362267
// test for 64 bits floating point number -1.4769266419465142e-226 and -1.5270429820100067e-234

fmt.Println("test the addf32")
fmt.Println(F32_add(0xa68a0bc8, 0x3cf6080b))
fmt.Println(uint64(1022756875))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0xa68a0bc8, 0x3cf6080b))
fmt.Println(uint64(3170240523))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0xa68a0bc8, 0x3cf6080b))
fmt.Println(uint64(2751769512))
fmt.Println("test the divf32")
fmt.Println(F32_div(0xa68a0bc8, 0x3cf6080b))
fmt.Println(uint64(2836374441))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0xa68a0bc8, 0x3cf6080b))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0xa68a0bc8, 0x3cf6080b))
fmt.Println("True")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0xa68a0bc8, 0x3cf6080b))
fmt.Println("True")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0xa68a0bc8, 0x3cf6080b))
fmt.Println(uint64(1022756875))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0xa68a0bc8,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x268a0bc8))
fmt.Println(uint64(855960987))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0xa68a0bc8, 0x3cf6080b, 0xa68a0bc8))
fmt.Println(uint64(2794336549))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println(uint64(10451726070485482288))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println(uint64(10451726070322564774))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println(uint64(0))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println(uint64(4726263049912874883))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println("True")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println("True")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x910bfd7c441f04eb, 0x8f636bd91498f31f))
fmt.Println(uint64(10323821229838991484))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x910bfd7c441f04eb,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x110bfd7c441f04eb))
fmt.Println(uint64(2917749344701773562))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x910bfd7c441f04eb, 0x8f636bd91498f31f, 0x910bfd7c441f04eb))
fmt.Println(uint64(10451726070404023531))
}
