
    package test

    import (
        "fmt"
        "testing"
        . "github.com/yao-jz/softfloat-go/comp"
    )

    func Test2(t *testing.T) {
                  // test for 32 bits floating point number -1.4270049595516121e-36 and -86613032960.0
// test for 64 bits floating point number 2.2059932578027442e+195 and 3.6997481599930187e-212

fmt.Println("test the addf32")
fmt.Println(F32_add(0x83f2cad5, 0xd1a15450))
fmt.Println(uint64(3517011024))
fmt.Println("test the subf32")
fmt.Println(F32_sub(0x83f2cad5, 0xd1a15450))
fmt.Println(uint64(1369527376))
fmt.Println("test the mulf32")
fmt.Println(F32_mul(0x83f2cad5, 0xd1a15450))
fmt.Println(uint64(370737542))
fmt.Println("test the divf32")
fmt.Println(F32_div(0x83f2cad5, 0xd1a15450))
fmt.Println(uint64(0))
fmt.Println("test the eqf32")
fmt.Println(F32_eq(0x83f2cad5, 0xd1a15450))
fmt.Println("False")
fmt.Println("test the lef32")
fmt.Println(F32_le(0x83f2cad5, 0xd1a15450))
fmt.Println("False")
fmt.Println("test the ltf32")
fmt.Println(F32_lt(0x83f2cad5, 0xd1a15450))
fmt.Println("False")
fmt.Println("test the remf32")
fmt.Println(F32_rem(0x83f2cad5, 0xd1a15450))
fmt.Println(uint64(2213726933))
fmt.Println("test the roundToIntf32")
fmt.Println(F32_roundToInt(0x83f2cad5,false))
fmt.Println(uint64(0))
fmt.Println("test the sqrtf32")
fmt.Println(F32_sqrt(0x3f2cad5))
fmt.Println(uint64(565201330))
fmt.Println("test the mulAddf32")
fmt.Println(F32_mulAdd(0x83f2cad5, 0xd1a15450, 0x83f2cad5))
fmt.Println(uint64(370737542))
fmt.Println("test the addf64")
fmt.Println(F64_add(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println(uint64(7529517404867547298))
fmt.Println("test the subf64")
fmt.Println(F64_sub(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println(uint64(7529517404867547298))
fmt.Println("test the mulf64")
fmt.Println(F64_mul(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println(uint64(4366105931680936930))
fmt.Println("test the divf64")
fmt.Println(F64_div(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println(uint64(9218868437227405312))
fmt.Println("test the eqf64")
fmt.Println(F64_eq(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println("False")
fmt.Println("test the lef64")
fmt.Println(F64_le(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println("False")
fmt.Println("test the ltf64")
fmt.Println(F64_lt(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println("False")
fmt.Println("test the remf64")
fmt.Println(F64_rem(0x687e382fc74050a2, 0x1408e909f1e6a8cc))
fmt.Println(uint64(1441814514930413012))
fmt.Println("test the roundToIntf64")
fmt.Println(F64_roundToInt(0x687e382fc74050a2,false))
fmt.Println(uint64(7529517404867547298))
fmt.Println("test the sqrtf64")
fmt.Println(F64_sqrt(0x687e382fc74050a2))
fmt.Println(uint64(6068034423181146826))
fmt.Println("test the mulAddf64")
fmt.Println(F64_mulAdd(0x687e382fc74050a2, 0x1408e909f1e6a8cc, 0x687e382fc74050a2))
fmt.Println(uint64(7529517404867547298))
}
